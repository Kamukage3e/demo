name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TERRAFORM_VERSION: 1.10.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build Lambda function
      run: |
        cd app/lambda-jobs-api
        GOOS=linux GOARCH=amd64 go build -o bootstrap main.go
        zip lambda.zip bootstrap
    
    - name: Upload Lambda artifact
      uses: actions/upload-artifact@v3
      with:
        name: lambda-zip
        path: app/lambda-jobs-api/lambda.zip

  terraform-plan:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Lambda artifact
      uses: actions/download-artifact@v4
      with:
        name: lambda-zip
        path: app/lambda-jobs-api/
    
    - name: Extract AWS region from tfvars
      id: extract-region
      run: |
        REGION=$(grep '^region' infra/live/dev/terraform.tfvars | cut -d'"' -f2)
        echo "aws_region=$REGION" >> $GITHUB_OUTPUT
      working-directory: .
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ steps.extract-region.outputs.aws_region }}
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./infra/live/dev
    
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./infra/live/dev

  terraform-apply:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Lambda artifact
      uses: actions/download-artifact@v4
      with:
        name: lambda-zip
        path: app/lambda-jobs-api/
    
    - name: Extract AWS region from tfvars
      id: extract-region
      run: |
        REGION=$(grep '^region' infra/live/dev/terraform.tfvars | cut -d'"' -f2)
        echo "aws_region=$REGION" >> $GITHUB_OUTPUT
      working-directory: .
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ steps.extract-region.outputs.aws_region }}
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./infra/live/dev
    
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./infra/live/dev
